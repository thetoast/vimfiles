snippet -//\s?API- "Adds a new API comment for Desktop Recorder WebService" rb
//==========================================================================
// DesktopRecorder.aspx/$1
//
// description: $2
//
// params: $3
//
// json: $4
//
// response:
// $5
//==========================================================================
endsnippet

snippet //ref "Adds a new typescript reference" !b
///<reference path='$1' />
endsnippet

snippet mod "Creates a new module" !b
module $1 {

	$0

}
endsnippet

snippet class "Creates a new class" !b
/**
 * Class $1
 *
 * $2
 *
 */
class $1 {

	constructor($3) {
		$0
	}

}
endsnippet

snippet /interf?a?c?e?/ "Creates a new interface" !rb
/**
 * Interface $1
 *
 * $2
 *
 */
interface $1 {

	$0

}
endsnippet

snippet /meth(od)?/ "Creates a new method" !br
/**
 * Method $1
 *
 * $2
 *
 */
${3:public }$1($4) : ${5:void} {
	$0
}
endsnippet

snippet /ameth(od)?/ "Creates a new abstract method" !br
/**
 * Method $1 (abstract)
 *
 * $2
 *
 */
$1($4) : ${5:void};
endsnippet

snippet /impo?r?t?/ "Adds a new TypeScript import" !br
import ${1/((\.\.?\/)*(\w+\/)*)?(\w+)/$4/} = require("$1");
endsnippet

snippet "// TODO" "Adds a todo" !b
// TODO (RyanM : `echo "console.log(new Date().toDateString())" | node`) $1
endsnippet

snippet defer "Creates a new Q.Deferred<T>" !b
var deferred : Q.Deferred<$1> = Q.defer<$1>();

${VISUAL}$0

return deferred.promise;
endsnippet

snippet prom "Inserts a Q.Promise<T> type declaration" !
Q.Promise<$1>
endsnippet
